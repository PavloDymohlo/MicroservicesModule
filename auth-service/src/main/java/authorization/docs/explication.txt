Пояснення до проекту( українською):
Проект імітує додаток виклику таксі та складається з трьох мікросервісів.

Перший мікросервіс(auth-service) відповідає за реєстрацію, аутентифікацію користувача та отримання/перевірку токену.
На сторінці сервера можливо робити вибір:
- продовження без реєстрації;
- реєстрація користувача, при якій користувача відправляє на сторінку на цьому ж сервері для отримання токену(в подальшому
  потрібно модернізувати повернення до головного меню);
- аутентифікація користувача. При вдалій аутентифікації користувача відправляє на інший сервер( сервер замовлення).

Другий мікросервіс(order-service). На цьому сервісі користувач обирає дистанцію проїзду(1), вибір часу поїздки(2),
вибір сервісу(3) та ввод токену(на сторінці сервісу є відповідні формочки).
1) Дистанція проїзду - це імітація карти місцевості. Замість прокладання маршруту ми вносимо число, імітуючи  тим самим
прораховану відстань між адресами( в подальшому можливо додати справжні карти).
2) Вибір часу поїздки - це імітація часу виклику таксі. Так як проект навчальний, зробив це меню, таким щоб час можна було змінювати.
Це допоможе переглядати як змінюється ціна залежно від часу виклику( при створені реального додатку - це меню змінити на
реалТайм - скоріше всього видалити цей пункт меню і додати логіку, де при натискані кнопки типу "Замовити" весь JSON буде
передаватись разом з реальним часом замовлення).
3) Вибір сервісу - це вибір сервісу таксі, після якого програма рандомно буде обирати машину, яка відповідає обраній
категорії. Це імітація таксі, яке "взяло" це замовлення.
Після вводу/вибору всіх даних, при натискані на кнопку "Submit Order" введені дані відправляються на третій сервіс,
обробляються там і нам повертається(на цей сервіс) вартість поїздки.
Примітка: В подальшому розробити - попередній огляд ціни поїздки( без авто).

Третій сервіс(price-service). Цей сервіс отримує дані з другого сервісу, проводить розрахунок поїздки та повертає ціну
на другий сервіс. Також, при отримані токену, він відправляє його на перевірку валідності на перший сервіс. якщо токен
існує - сервіс надає знижку, якщо не існує - проводить розрахунок ціни без знижки. Також при ціні поїздки менше мінімальної,
виводиться мінімальна ціна. якщо існує скидка, то вона вираховується з фінальної ціни( тобто дисконт може вплинути на
мінімальну ціну, та повернути користувачу вартість меншу за мінімальну).

Примітка: В проекті використовуються In-memory Бази Даних, в майбутньому під'єднати постійні Бази Даних. Розробити більш
реалістичні види дисконту( промокод і т.п.)
